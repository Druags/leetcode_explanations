class Solution:
    def my_solution(self, asteroids: List[int]) -> List[int]:
        stack = [] #
        for i in range(1, len(asteroids)): # перебираем все астероиды
            if not stack or (asteroids[i] > 0) == (stack[-1] > 0) : # если стэк пустой или у астероидов одно направление
                stack.append(asteroids[i]) # добавляем астероид в стэк
            elif stack[-1] > 0 and asteroids[i]<0: # если последний элемент из стэка летит вправо, а текущий астероид - влево
                stack.append(asteroids[i]) # добавляем текущий астероид в стэк
                while len(stack) > 1: # пока в стэке не останется один элемент
                    if (stack[-1] > 0) == (stack[-2] > 0): # если два последних элемента из стэка имеют одинаковое направление
                        break # прерываем
                    elif abs(stack[-1]) > abs(stack[-2]): #  если последний добавленный в стэк элемент больше по модулю, чем его предшественник  
                        stack.pop(-2) # удаляем меньший элемент
                    elif abs(stack[-1]) == abs(stack[-2]): #  если последний и предпоследний элементы равны 
                        stack.pop() # удаляем оба
                        stack.pop() #удаляем оба
                        break # прерываем
                    else: # если последний добавленный элемент меньше по модулю, чем его предшественник
                        stack.pop() # удаляем последний элемент
                        break # прерываем    
            else: # если элементы летят в разных направлениях, но не сталкиваются(например, [-2, 2])
                stack.append(asteroids[i]) # добавляем астероид в стэк
        return stack # возвращаем стэк

    def kshatriyas_solution(self, asteroids: List[int]) -> List[int]:
        stk = [] # создаём пустой стэк
        for asteroid in asteroids: # перебираем все астероиды
            if not stk or asteroid > 0: # если стэк пустой или астероид движется вправо
                stk.append(asteroid) # добавляем астероид в стэк
            else: # 
                while stk and stk[-1] > 0 and stk[-1] < abs(asteroid): # пока стэк не пустой, последний его элемент движется вправо и этот элемент меньше текущего астероида
                    stk.pop() # удаляем астероид из стэка
                if stk and stk[-1] == abs(asteroid): # если стэк не пуст и последний элемент стэка равен нынешнему элементу по модулю
                    stk.pop() # удаляем астероид из стэка
                 
                elif not stk or stk[-1] < 0: # если стэк пуст или последний элемент стэка движется влево
                    stk.append(asteroid) # добавляем астероид в стэк
        
        return stk # возвращаем в стэк
