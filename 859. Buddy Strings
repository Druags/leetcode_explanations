class Solution:
    def buddyStrings(self, s: str, goal: str) -> bool:
        if s == goal: # если исходная и искомая строчки одинаковы
            temp = set(s) # преобразуем исходную строку в множество
            return len(temp) < len(goal) # сравниваем длину множества, если она меньше(встречаются одинаковые буквы, которые можно поменять местами), то возвращаем True
        
        length = len(s) # получаем длину строки
        for i in range(length): # запускаем цикл по всей строке
            if s[i] != goal[i]: # находим первую несоответсвующую букву
                for j in range(i,length): # запускаем ещё один цикл от этой буквы до конца
                    if s[:i] + s[j] + s[i+1:j] + s[i] + s[j+1:] == goal: # если находим такую перестановку, которая будет равна искомой строке
                        return True # то возвращаем True
                return False # если перебираем весь список и не находим нужной перестановки, то возвращаем False
